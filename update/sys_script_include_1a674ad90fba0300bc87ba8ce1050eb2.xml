<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_166541_ibm_resil.ResilientDefaultHandler</api_name>
        <client_callable>false</client_callable>
        <description>Handle events from Resilient Action Module</description>
        <name>ResilientDefaultHandler</name>
        <script><![CDATA[var ResilientDefaultHandler = Class.create();
ResilientDefaultHandler.prototype = {
	initialize: function() {
	},
	
	type: 'ResilientDefaultHandler',
	
	create: function(message) {
		var resilientClient = new ResilientAPI();
		var gr = new GlideRecord('incident');
		var incID, taskID;
		if (message.task){
			// Create Ticket from Task
			incID = message.incident.id;
			taskID = message.task.id;
			gr.setValue("short_description", message.task.name);
			gr.setValue("description", message.task.instr_text);
			// TODO: Set Due Date
		}
		else if (message.incident){
			// Create Ticket from Incident
			incID = message.incident.id;
			gr.setValue("short_description", message.incident.name);
			gr.setValue("description", message.incident.description);
		}
		else{
			throw "Invalid Request from Resilient";
		}
		
		if (message.properties){
			if (message.properties.worknotes){
				gr.work_notes = message.properties.worknotes;
			}
			if (message.properties.comments){
				gr.comments = message.properties.comments;
			}
		}
		
		var sys_id = gr.insert();
		var errorMessage = gr.getLastErrorMessage();
		
		var tableRow = {
			"snow_resilient_task_id": taskID,
			"snow_ticket_number": gr.getValue("number"),
			"snow_short_description": gr.getValue("short_description"),
			"snow_status": gr.getDisplayValue("state"),
			"snow_ticket_sys_id": sys_id,
			"snow_table_name": gr.getTableName(),
		};
		var newRow = resilientClient.addDataTableRow(incID, "servicenow_tickets", tableRow);
		
	},
	
	update: function(event) {
		var resilientClient = new ResilientAPI();
		var incID = message.incident.id;
		var taskID = null;
		if (message.task){
			taskID = message.task.id;
		}
		// Check which ticket this update is for
		// This will be more efficient if stored in a field on the ticket!
		var conditions = {
			"snow_resilient_task_id": taskID
		};
		var rows = resilientClient.getDataTableRows(incID, "servicenow_tickets", conditions);
		if (rows.length == 0){
			throw("Couldn't find ticket for Resilient Incident.Task " + incID + "." + taskID);
		}
		else if (rows.length > 1){
			throw("Ticket linked to multiple Resilient Incident.Task " + incID + "." + taskID);
		}
		var sysID = rows[0].cells.snow_ticket_sys_id;
		var tableName = rows[0].cells.snow_table_name;
		var gr = new GlideRecord(tableName);
		gr.get(sysID);
		
		// Do Updates
		if(message.incident.status == "C"){
			gr.state = "Resolved";
			gr.work_notes = "Resilient Incident " + incID + " has closed. " + message.incident.resolution_summary;
			gr.update();
		}
		if(message.task && message.task.status == "C"){
			gr.state = "Resolved";
			gr.work_notes = "Resilient Incident " + incID + " Task " + taskID +" has closed. ";
			gr.update();
		}
		
		var rowUpdate = {
			"snow_status": gr.state.getDisplayValue()
		};
		resilientClient.updateDataTableRow(incID, tableName, rows[0], rowUpdate);
	},
	
	worknote: function(event) {
		
	},
	
	comment: function(event) {
		
	}
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-12-02 02:11:52</sys_created_on>
        <sys_id>1a674ad90fba0300bc87ba8ce1050eb2</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>ResilientDefaultHandler</sys_name>
        <sys_package display_value="IBM Resilient" source="x_166541_ibm_resil">23e3da820f120300bc87ba8ce1050e97</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="IBM Resilient">23e3da820f120300bc87ba8ce1050e97</sys_scope>
        <sys_update_name>sys_script_include_1a674ad90fba0300bc87ba8ce1050eb2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-12-11 18:50:36</sys_updated_on>
    </sys_script_include>
</record_update>
