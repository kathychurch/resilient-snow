<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>incident</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="incident">u_resilient_idISNOTEMPTY^stateVALCHANGES^stateIN6,7,8^u_resilient_idNOT LIKE.^EQ<item endquery="false" field="u_resilient_id" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="state" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="state" goto="false" newquery="false" operator="IN" or="false" value="6,7,8"/>
            <item endquery="false" field="u_resilient_id" goto="false" newquery="false" operator="NOT LIKE" or="false" value="."/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Resilient_Close_Incident</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	var resilientClient = new ResilientAPI();
	var inc = resilientClient.getIncident(current.u_resilient_id);
	var updates = {
		"plan_status": "C",
		"resolution_summary": current.close_notes ? current.close_notes.getDisplayValue() : "ServiceNow Ticket Closed",
		"resolution_id": "Resolved"
	};
	resilientClient.updateIncident(inc, updates);
	
	var dtUpdates = {
		"snow_status": current.state.getDisplayValue()
	};
	var conditions = {
		"snow_resilient_task_id": null
	};
	var rows = resilientClient.getDataTableRows(parseInt(current.u_resilient_id), "servicenow_tickets", conditions);
	gs.info("Got " + rows.length + " rows");
	if (rows.length == 1){
		var row = rows[0];
		resilientClient.updateDataTableRow(current.u_resilient_id, "servicenow_tickets", row, dtUpdates);
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-01-09 15:09:18</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>537520390feb0300bc87ba8ce1050eac</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Resilient_Close_Incident</sys_name>
        <sys_overrides/>
        <sys_package display_value="IBM Resilient" source="x_166541_ibm_resil">23e3da820f120300bc87ba8ce1050e97</sys_package>
        <sys_policy/>
        <sys_scope display_value="IBM Resilient">23e3da820f120300bc87ba8ce1050e97</sys_scope>
        <sys_update_name>sys_script_537520390feb0300bc87ba8ce1050eac</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-02-01 03:03:55</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=537520390feb0300bc87ba8ce1050eac"/>
</record_update>
